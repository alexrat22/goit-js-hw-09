{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MACMC,EAAW,GAkBjB,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,aAAcF,SAASC,cAAc,UACrCE,WAAYH,SAASC,cAAc,kBACnCG,UAAWJ,SAASC,cAAc,iBAClCI,OAAQL,SAASC,cAAc,oBAEjCH,EAAKC,KAAKO,iBAAiB,SAG3B,SAAqBC,GACnBV,EAASU,EAAIC,OAAOC,MAAQF,EAAIC,OAAOE,MACvCC,aAAaC,QA/BK,WA+BgBC,KAAKC,UAAUjB,G,IAJnDC,EAAKI,aAAaI,iBAAiB,SAOnC,WACE,MAAMS,EAAYJ,aAAaK,QAnCb,YAoCZC,EAAaJ,KAAKK,MAAMH,GAC9B,IAAII,EAAW,EACf,MAAMC,EAAaC,aAAY,KAC7BF,GAAY,EApChB,SAAuBA,EAAUG,GAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACdC,KAAKC,SAAW,GAEpCH,EACEI,EAAAlC,GAASmC,OAAOC,QAAQ,qBAAqBZ,QAAeG,QAG9DI,EACEG,EAAAlC,GAASmC,OAAOE,QAAQ,oBAAoBb,QAAeG,QAGxDC,I,CAyBPU,CAAcd,EAAU,KACpBA,IAAaF,EAAWZ,QAC1B6B,cAAcd,EAAW,GAE1B,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Loading } from 'notiflix';\n\nconst STORAGE_KEY = 'Form-Key';\nconst formData = {};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(\n        Notiflix.Notify.success(`Fullfiled promise ${position} in ${delay}ms`)\n      );\n    } else {\n      reject(\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      );\n    }\n    return promise;\n  });\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  createButton: document.querySelector('button'),\n  firstDelay: document.querySelector('[name = delay]'),\n  delayStep: document.querySelector('[name = step]'),\n  amount: document.querySelector('[name = amount]'),\n};\nrefs.form.addEventListener('input', onFormInput);\nrefs.createButton.addEventListener('click', onSubmitButtonClick);\n\nfunction onFormInput(evt) {\n  formData[evt.target.name] = evt.target.value;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n}\n\nfunction onSubmitButtonClick() {\n  const savedData = localStorage.getItem(STORAGE_KEY);\n  const parsedData = JSON.parse(savedData);\n  let position = 0;\n  const intervalId = setInterval(() => {\n    position += 1;\n    createPromise(position, 10000);\n    if (position === parsedData.amount) {\n      clearInterval(intervalId);\n    }\n  }, 1000);\n}\n\n//   console.log(refs.firstDelay.value);\n//   console.log(refs.delayStep.value);\n//   console.log(refs.amount.value);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$refs","form","document","querySelector","createButton","firstDelay","delayStep","amount","addEventListener","evt","target","name","value","localStorage","setItem","JSON","stringify","savedData","getItem","parsedData","parse","position","intervalId","setInterval","delay","promise","Promise","resolve","reject","Math","random","$parcel$interopDefault","Notify","success","failure","$47d4ff9957288465$var$createPromise","clearInterval"],"version":3,"file":"03-promises.e71bff62.js.map"}